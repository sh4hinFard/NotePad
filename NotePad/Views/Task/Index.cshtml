@model IEnumerable<Be.Task_Todo>
@{
    Layout = "~/Views/Shared/_Profile_Layout.cshtml";
}
<div id="TaskModal" class="modal">
    <div class="modal-content" style="width: fit-content;margin-left:20%;">
        <span class="close">&times;</span>
        <h2>Add Task</h2>
        <form id="addTaskForm">
            <label>Title</label>
            <input required class="form-control" type="text" id="newTaskTitle" placeholder="Enter Title">
            <label>Date</label>                                    
            <input required class="form-control" type="date" id="newTaskDate" placeholder="Enter Date">
            <label>Image</label>                                  
            <input required class="form-control" type="file" id="newTaskImage" placeholder="Enter Image">
            <label>Detail</label>
            <textarea class="form-control" type="text" id="newTaskDetail" placeholder="Enter Detail"></textarea>
            <button class="btn btn-primary" id="saveTaskButton">Save</button>
        </form>
    </div>
</div>
<ul id="TaskList"></ul>
<section style="background-color: #eee;">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-md-12 col-xl-10">

                <div class="card">
                    <div class="card-header p-3">
                        <h5 class="mb-0"><i class="fas fa-tasks me-2"></i>Tasks</h5>
                    </div>
                    <div class="card-body" data-mdb-perfect-scrollbar="true" style="position: relative; height: 400px">
                        <div style="height: 400px; overflow: auto;">
                            <table id="TaskTable" class="table mb-0">
                                <thead>
                                    <tr>
                                        <th scope="col">Title</th>
                                        <th scope="col">Date</th>
                                        <th scope="col">Detail</th>
                                        <th scope="col">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var task in Model)
                                    {
                                        <tr class="fw-normal">
                                            <th>
                                                <img src="/Images/NotesAndTasks/@task.Image"
                                                     class="shadow-1-strong rounded-circle" alt="avatar 1"
                                                     style="width: 55px; height: auto;">
                                                <span class="ms-2">@task.Title</span>
                                            </th>
                                            <td class="align-middle">
                                                <span>@task.Date</span>
                                            </td>
                                            <td class="align-middle">
                                                <h6 class="mb-0"><span class="badge bg-danger">@task.Detail</span></h6>
                                            </td>
                                            <td class="align-middle">
                                                <a data-mdb-toggle="tooltip" href="/Task/Edit_Task/@task.TaskId" aria-label="Edit" data-mdb-original-title="Edit">
                                                    <i class="fas fa-pencil-square-o text-success me-3"></i>
                                                </a>
                                                <a onclick="delet(this,@task.TaskId)" data-mdb-toggle="tooltip" href="#" title="Remove">
                                                    <i class="fas fa-trash-alt text-danger"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div style="margin-top: 20px;" class="card-footer text-end p-3">
                        <button id="addTaskButton" class="btn btn-primary">Add Task</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>
@section Scripts{
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $("#TODOsection").addClass('active').siblings('li').removeClass('active');
    </script>
 <script>
        // Get the modal
        var modal = document.getElementById("TaskModal");

        // Get the button that opens the modal
        var btn = document.getElementById("addTaskButton");

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        // When the user clicks on the button, open the modal
        btn.onclick = function () {
            modal.style.display = "block";
        }

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

        const form = document.getElementById("addTaskForm");

        form.addEventListener("submit", function (event) {
            event.preventDefault();

            const title = document.getElementById("newTaskTitle").value;
            const date = document.getElementById("newTaskDate").value;
            const image = document.getElementById("newTaskImage").files[0];
            const detail = document.getElementById("newTaskDetail").value;

            const formData = new FormData();
            formData.append("Title", title);
            formData.append("Date", date);
            formData.append("Image", image);
            formData.append("Detail", detail);

            const xhr = new XMLHttpRequest();
            xhr.open("POST", "/Task/Add_Task", true);
            xhr.onreadystatechange = function () {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (xhr.status === 200) {
                        const response = xhr.responseText;
                        var taskTable = document.querySelector('#TaskTable');

                        // Get the values of the input fields
                        var title = document.querySelector('#newTaskTitle').value;
                        var date = document.querySelector('#newTaskDate').value;
                        var imageInput = document.querySelector('#newTaskImage');
                        var detail = document.querySelector('#newTaskDetail').value;

                        // Create a new row for the table with the values obtained
                        var newRow = taskTable.insertRow();
                        var imageCell = newRow.insertCell();
                        var dateCell = newRow.insertCell();
                        var detailCell = newRow.insertCell();
                        var actionsCell = newRow.insertCell();
                        // Read the selected file and convert it to a data URL
                        var reader = new FileReader();
                        reader.readAsDataURL(imageInput.files[0]);
                        reader.onload = function () {
                            // Create an image element with the data URL and append it to the image cell
                            var image = document.createElement('img');
                            image.src = reader.result;
                            image.classList.add('shadow-1-strong', 'rounded-circle');
                            image.alt = 'avatar';
                            image.style.width = '55px';
                            image.style.height = 'auto';

                            var span = document.createElement('span');
                            span.classList.add('ms-2');
                            span.textContent = title;

                            var th = document.createElement('th');
                            th.appendChild(image);
                            th.appendChild(span);
                            imageCell.appendChild(th);
                            dateCell.innerHTML = date;
                            actionsCell.innerHTML = `<a href="/Task/Edit_Task/${response}" data-mdb-toggle='tooltip' title='Edit'><i class='fas fa-pencil-square-o text-success me-3'></i></a><a href="#" onclick="delet(this,${response})" data-mdb-toggle='tooltip' title='Remove'><i class='fas fa-trash-alt text-danger'></i></a>`;
                            detailCell.innerHTML = `<h6 class="mb-0"><span class="badge bg-danger">${detail}</span></h6>`;
                        };
                        // Clear the input fields
                        document.querySelector('#newTaskTitle').value = '';
                        document.querySelector('#newTaskDate').value = '';
                        document.querySelector('#newTaskImage').value = '';
                        document.querySelector('#newTaskDetail').value = '';
                        // Hide the modal
                        var modal = document.getElementById("TaskModal");
                        modal.style.display = "none";
                        // Handle the success response
                    } else {
                        console.log("Error: " + xhr.status);
                        // Handle the error response
                    }
                }
            };
            xhr.send(formData);
        });
        //form.addEventListener('submit', (event) => {
        //    // Prevent the default form submission behavior
        //    event.preventDefault();
        //    // Get the table element
        //    var taskTable = document.querySelector('#NoteTable');

        //    // Get the values of the input fields
        //    var title = document.querySelector('#newNoteTitle').value;
        //    var date = document.querySelector('#newNoteDate').value;
        //    var imageInput = document.querySelector('#newNoteImage');
        //    var detail = document.querySelector('#newNoteDetail').value;

        //    // Create a new row for the table with the values obtained
        //    var newRow = taskTable.insertRow();
        //    var imageCell = newRow.insertCell();
        //    var dateCell = newRow.insertCell();
        //    var detailCell = newRow.insertCell();
        //    var actionsCell = newRow.insertCell();
        //    // Read the selected file and convert it to a data URL
        //    var reader = new FileReader();
        //    reader.readAsDataURL(imageInput.files[0]);
        //    reader.onload = function () {
        //        // Create an image element with the data URL and append it to the image cell
        //        var image = document.createElement('img');
        //        image.src = reader.result;
        //        image.classList.add('shadow-1-strong', 'rounded-circle');
        //        image.alt = 'avatar';
        //        image.style.width = '55px';
        //        image.style.height = 'auto';

        //        var span = document.createElement('span');
        //        span.classList.add('ms-2');
        //        span.textContent = title;

        //        var th = document.createElement('th');
        //        th.appendChild(image);
        //        th.appendChild(span);
        //        imageCell.appendChild(th);
        //        dateCell.innerHTML = date;
        //        actionsCell.innerHTML = "<a href='#!' data-mdb-toggle='tooltip' title='Done'><i class='fas fa-pencil-square-o text-success me-3'></i></a><a href='#!' data-mdb-toggle='tooltip' title='Remove'><i class='fas fa-trash-alt text-danger'></i></a>";
        //        detailCell.innerHTML = `<h6 class="mb-0"><span class="badge bg-danger">${detail}</span></h6>`;
        //    };



        //    // Clear the input fields
        //    document.querySelector('#newNoteTitle').value = '';
        //    document.querySelector('#newNoteDate').value = '';
        //    document.querySelector('#newNoteImage').value = '';
        //    document.querySelector('#newNoteDetail').value = '';

        //    // Hide the modal
        //    var modal = document.getElementById('NoteModal');
        //    modal.style.display = 'none';
        //});


        // Get the button that saves the new task

        function delet(row, Id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/Task/Delete_Task",
                        type: "Get",
                        data: {
                            id: Id
                        }
                    })
                    Swal.fire({
                        position: 'center',
                        icon: 'success',
                        title: 'Task has been deleted !',
                        showConfirmButton: false,
                        timer: 1500
                    })
                    $(row).closest('tr').empty();
                }
            })
        }
 </script>
}